#!/usr/bin/zsh

# Make sure that emacs doesn't hang
[[ $TERM == "dumb" ]] && unsetopt zle && PS1='$ ' && return

# Path to your oh-my-zsh installation.
export ZSH=~/.dotfiles
export ZSHDOTFILES=~/.dotfiles-old

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="random"
ZSH_THEME="jonathan"

HIST_STAMPS="yyyy-mm-dd"

plugins=(
    bgnotify
    colorize
    command-not-found
    compleat
    # dircycle
    docker-compose
    docker
    # doctl
    git
    git-extras
    # go
    # golang
    # gradle
    # gulp
    history
    # httpie
    # k3d
    # keybase
    kubectl
    # lein
    # mvn
    nmap
    node
    # nvm
    npm
    pj
    # redis-cli
    sudo
    systemd
    zsh_reload)

# User configuration

PROJECT_PATHS=(~/projects
               ~/go/src/github.com/duck1123/
               ~/go/src/github.com/lightningnetwork/
               ~/go/src/github.com/roasbeef/
              )
fpath=(
    $fpath
    ~/.dotfiles-old/zsh/rancher-zsh-completion/
    ~/projects/bb-task-completion/
    ~/projects/lncli-completion/
    ~/.dotfiles/custom/plugins/keybase/
    ~/.zsh/completions/
)

# export PATH="$HOME/anaconda3/bin:$PATH"

# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh
export PATH="$HOME/.dotfiles-old/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"
export PROJECTS=~/projects

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

fpath=($ZSHDOTFILES/functions $fpath)

# bindkey '^R' percol_select_history

alias reload!='. ~/.zshrc'
alias psgrep='ps -ef | grep -v grep | grep '
# alias e='emacsclient -t'
# alias ec='emacsclient -c'
# alias vim='emacsclient -t'
# alias vi='emacsclient -t'
# alias v="vagrant"
alias dkcp="docker-compose"
# alias rancher-hosts="rancher hosts --format json | jq -r '.Host | (.name // .hostname)' | sort"
# alias dockerlogs="cd /home/duck/projects/btcpayserver-docker/Generated &&  docker-compose -f docker-compose.generated.yml  logs -f "

# alias rust-musl-builder='docker run --rm -it -v "$(pwd)":/home/rust/src ekidd/rust-musl-builder'
# alias rust-musl-builder='docker run --rm -it -v "$(pwd)":/home/rust/src messense/rust-musl-cross:armv7-musleabihf'

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
# export PATH="$HOME/.huber/bin:$PATH"

# echo "loading config"

###-begin-cmd-completions-###
#
# yargs command completion script
#
# Installation: /home/duck/projects/idashboards/script/cmd completion >> ~/.zshrc
#    or /home/duck/projects/idashboards/script/cmd completion >> ~/.zsh_profile on OSX.
#
_cmd_yargs_completions()
{
  local reply
  local si=$IFS
  IFS=$'
' reply=($(COMP_CWORD="$((CURRENT-1))" COMP_LINE="$BUFFER" COMP_POINT="$CURSOR" /home/duck/projects/idashboards/script/cmd --get-yargs-completions "${words[@]}"))
  IFS=$si
  _describe 'values' reply
}
compdef _cmd_yargs_completions cmd
###-end-cmd-completions-###

# HSTR configuration - add this to ~/.zshrc
alias hh=hstr                    # hh to be alias for hstr
setopt histignorespace           # skip cmds w/ leading space from history
export HSTR_CONFIG=hicolor       # get more colors
bindkey -s "\C-r" "\C-a hstr -- \C-j"     # bind hstr to Ctrl-r (for Vi mode check doc)

source <(doctl completion zsh)
# source <(helm completion zsh)
source <(k3d completion zsh)
source <(direnv hook zsh)
# eval "$(direnv hook zsh)"

if [ -e /home/duck/.nix-profile/etc/profile.d/nix.sh ]; then . /home/duck/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer

# source $HOME/.nix-profile/etc/profile.d/hm-session-vars.sh

autoload -Uz compinit && compinit -i

# echo "loaded config"
