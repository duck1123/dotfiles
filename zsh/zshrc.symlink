#!/usr/bin/zsh

# Make sure that emacs doesn't hang
[[ $TERM == "dumb" ]] && unsetopt zle && PS1='$ ' && return

# source ~/.dotenv.sh

# Path to your oh-my-zsh installation.
export ZSH=~/.dotfiles
export ZSHDOTFILES=~/.dotfiles-old

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="random"
ZSH_THEME="jonathan"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    bgnotify
    colorize
    command-not-found
    compleat
    dircycle
    docker-compose
    docker

    git
    git-extras
    go
    golang
    gradle
    gulp
    history
    httpie
    keybase
    lein
    mvn
    nmap
    node

    npm
    pj
    redis-cli
    sudo
    systemd
    ubuntu
    zsh_reload)

# User configuration

PROJECT_PATHS=(~/projects
               ~/go/src/github.com/duck1123/
               ~/go/src/github.com/lightningnetwork/
               ~/go/src/github.com/roasbeef/
              )
fpath=(
    $fpath
    ~/.dotfiles-old/zsh/rancher-zsh-completion/
    ~/projects/lncli-completion/
    ~/.dotfiles/custom/plugins/keybase/
)

export PATH="./bin:$HOME/.dotfiles-old/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"

# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='emacsclient'
else
  export EDITOR='emacsclient'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# your project folder that we can `c [tab]` to
export PROJECTS=~/projects

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

fpath=($ZSHDOTFILES/functions $fpath)

# bindkey '^R' percol_select_history

alias reload!='. ~/.zshrc'
alias psgrep='ps -ef | grep -v grep | grep '
alias e='emacsclient -t'
alias ec='emacsclient -c'
alias vim='emacsclient -t'
alias vi='emacsclient -t'
alias v="vagrant"
alias dkcp="docker-compose"
alias rancher-hosts="rancher hosts --format json | jq -r '.Host | (.name // .hostname)' | sort"

function docker-tags () {
    docker-ls \
      tags \
      -registry $DOCKER_REGISTRY_PATH \
      -allow-insecure \
      $1 2>/dev/null | \
      tail -n +3 | \
      awk '{gsub("- ", "");print}'
}

function docker-digest () {
    docker-ls \
      tag \
      -registry $DOCKER_REGISTRY_PATH \
      -allow-insecure \
      $1 2>/dev/null | \
      awk 'FNR == 3 {gsub("digest: ", "");print}'
}

function docker-image-rm () {
    repository=`echo "$1" | cut -d':' -f1`
    tag=`echo "$1" | cut -d':' -f2`

    docker-rm \
      -registry $DOCKER_REGISTRY_PATH \
      -allow-insecure \
      $repository:`docker-digest $1`
}

function docker-repositories () {
    docker-ls \
      repositories \
      --registry $DOCKER_REGISTRY_PATH \
      -allow-insecure \
      2>/dev/null | \
      tail -n +2 | \
      awk '{gsub("- ", "");print}'
}

function docker-trace () {
    imageName="$1"

    echo "Submitting trace for ${imageName}"

    curl -v http://build.jiksnu.org/docker-traceability/submitContainerStatus \
         --data-urlencode status=create \
         --data-urlencode imageName=${imageName?} \
         --data-urlencode hostName=$(hostname) \
         --data-urlencode inspectData="$(docker inspect ${imageName})"
}
