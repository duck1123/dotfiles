# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, ... }:
let nas-ip = "192.168.0.124";
in {
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "nvme" "xhci_pci" "ahci" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/b0dd8d1b-b9e2-4ca8-87b2-d99d40809cfd";
      fsType = "ext4";
    };

    "/boot" = {
      device = "/dev/disk/by-uuid/1D60-65FB";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

    "/mnt/books" = {
      device = "${nas-ip}:/volume1/Books";
      fsType = "nfs";
      options = [ "nfsvers=3" "ro" "hard" "timeo=600" "retrans=2" "_netdev" ];
    };

    "/mnt/downloads" = {
      device = "${nas-ip}:/volume1/Downloads";
      fsType = "nfs";
      options = [ "nfsvers=3" "ro" "hard" "timeo=600" "retrans=2" "_netdev" ];
    };

    "/mnt/music" = {
      device = "${nas-ip}:/volume1/Music";
      fsType = "nfs";
      options = [ "nfsvers=3" "ro" "hard" "timeo=600" "retrans=2" "_netdev" ];
    };

    "/mnt/videos" = {
      device = "${nas-ip}:/volume1/Videos";
      fsType = "nfs";
      options = [ "nfsvers=3" "ro" "hard" "timeo=600" "retrans=2" "_netdev" ];
    };
  };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/34a6b6d6-cccf-474e-a2d6-7b3e9dc29d80"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
