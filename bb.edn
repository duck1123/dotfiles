{:tasks
 {install-cert-manager
  {:task
   (let [version "1.6.1"
         url     (format "https://github.com/jetstack/cert-manager/releases/download/v%s/cert-manager.yaml"
                     version)]
     (shell (format "kubectl apply -f %s" url)))}

  read-windows-key
  {:task
   (shell "sudo grep -Eao '(-?[A-Z0-9]{5}){5}' /sys/firmware/acpi/tables/MSDM")}

  k3d-create
  {:description "Create a k3d cluster"
   :task
   (let [api-port      6550
         registry-name "registry"
         server-count  1
         cmd           (clojure.string/join
              " "
              ["k3d cluster create"
               "--api-port" api-port
               "-p \"80:80@loadbalancer\""
               "-p \"443:443@loadbalancer\""
               "--servers" server-count
               "--registry-create" registry-name
               "--kubeconfig-update-default"])]
     #_(println cmd)
     (shell cmd))}

  k3d-delete
  {:task (shell "k3d cluster delete k3s-default")}

  k3d-start
  {:task (shell "k3d cluster start")}

  k3d-stop
  {:task (shell "k3d cluster stop")}

  install-consul
  {:task
   (let [replicas     1
         ingress-host "consul.localhost"]
     (shell
      (clojure.string/join
       " "
       ["consul-k8s install "
        (str "--set server.replicas=" replicas)
        "--set ui.ingress.enabled=true "
        (format "--set \"ui.ingress.hosts[0].host=%s\"" ingress-host)
        "--set \"ui.ingress.hosts[0].paths[0]=/\""
        "--set connectInject.enabled=true"
        "--set connectInject.default=true"
        "--set controller.enabled=true"])))}

  install-rancher
  {:task
   (let [namespace     "cattle-system"
         hostname      "rancher.dev.kronkltd.net"
         email         "duck@kronkltd.net"
         replica-count 1
         cmd           (clojure.string/join
              " "
              ["helm install rancher rancher-latest/rancher "
               (format "--namespace %s" namespace)
               (format "--set hostname=%s" hostname)
               (format "--set replicas=%s" replica-count)
               (format "--set ingress.tls.source=%s" "letsEncrypt")
               (format "--set letsEncrypt.email=%s" email)])]
     (println cmd)
     (shell cmd))}

  show-ports
  {:task (shell "netstat -ltnp")}

  update-nix
  {:task (shell "nix-channel --update")}

  watch-namespaces
  {:task (shell "watch kubectl get namespaces")}

  watch-pods
  {:task (shell "watch kubectl get pods --all-namespaces")}}}
